name: ml-cicd
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch: {}
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
permissions:
  contents: read
  pull-requests: write
jobs:
  lint_and_test:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.13"]
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - uses: astral-sh/setup-uv@v6
        with:
          version: "latest"
          enable-cache: true
          cache-dependency-glob: |
            pyproject.toml
            uv.lock

      - name: Sync dependencies
        run: |
          uv sync --group dev --frozen

      - name: Format check (ruff)
        run: |
          uv run ruff format --check .

      - name: Lint (ruff)
        run: |
          uv run ruff check . --output-format=github

      - name: Type check (mypy)
        run: |
          uv run mypy .

      - name: Test (pytest + coverage)
        run: |
          uv run pytest --cov=app --cov-report=xml --cov-report=term-missing

      - name: Upload to Codecov
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage.xml
          flags: unittest
          name: ${{ matrix.python-version }}
          fail_ci_if_error: true

      - name: Upload coverage artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-${{ matrix.python-version }}
          path: coverage.xml
